{{> header }}
<div id="map"></div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDj9OqHfUHE0ceYaJWvltSYvMb0gFS97h4"></script>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript">
var socket = io.connect();
var marker={};
var userObj;
var markers = [];
var options = {
  enableHighAccuracy: false,
  timeout: 10000,
  maximumAge: 0
};

if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(success, error, options);
}
else {
  alert('Geo Location feature is not supported in this browser.');
}
function success(pos) {
  var myLatLng={lat:pos.coords.latitude, lng:pos.coords.longitude};
  console.log(myLatLng);
  var map = new google.maps.Map(document.getElementById('map'),{
    zoom: 15,
    center: myLatLng
  });
  $.getJSON("/api/user", function(data) {
    data.user['location'] = myLatLng;
    socket.emit('subscribe', data.user);
  });
  var infowindow = new google.maps.InfoWindow();

  socket.on('userList', function(user_data){
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    for(var i=0; i<user_data.length; i++){
      userObj = user_data[i];
      marker[userObj.pseudoname] = new google.maps.Marker({
        position: new google.maps.LatLng(userObj.location.lat, userObj.location.lng),
        map: map
      });
      markers.push(marker[user_data[i].pseudoname]);
      var newMarker=marker[userObj.pseudoname];
      google.maps.event.addListener(newMarker, 'click', (function (newMarker, i) {
        return function () {
          infowindow.setContent('<div class="panel panel-info">' +
          '<div class="panel-heading">' +
          '<h3 class="panel-title">User Information</h3>' +
          '</div>' +
          '<div class="panel-body">' +
          '<div class="row">' +
          '<table class="table table-user-information">' +
          '<tbody>' +
          '<tr>' +
          '<td>Name</td>' +
          '<td>' + user_data[i].pseudoname + '</td>' +
          '</tr>' +
          '<tr>' +
          '<td>Phone Number:</td>' +
          '<td>' + user_data[i].phone + '</td>' +
          '</tr>' +
          '<tr>' +
          '<td>Email</td>' +
          '<td>' + user_data[i].email + '</td>' +
          '</tr>' +
          '<tr>' +
          '<td>TeamName</td>' +
          '<td>' + user_data[i].teams + '</td>' +
          '</tr>' +
          '</tbody>' +
          '</table>' +
          '</div>' +
          '</div>' +
          '</div>'
        );
        infowindow.open(map, newMarker);
      }
    })(newMarker, i));




  }
  console.log(JSON.stringify(user_data));
});
}

function error(err) {
  console.log(err.message);
  if(err.message.indexOf("Only secure origins are allowed") == 0) {
    // Secure Origin issue.
    console.log('HTTPS error');
  }
  console.warn(`ERROR(${err.code}): ${err.message}`);
}
</script>

{{> footer-end }}
